{"ast":null,"code":"'use strict';\n\nvar visit = require('unist-util-visit');\n\nvar lowlight = require('lowlight');\n\nvar toText = require('hast-util-to-text');\n\nmodule.exports = attacher;\n\nfunction attacher(options) {\n  var settings = options || {};\n  var detect = settings.subset !== false;\n  var prefix = settings.prefix;\n  var ignoreMissing = settings.ignoreMissing;\n  var plainText = settings.plainText || [];\n  var aliases = settings.aliases;\n  var languages = settings.languages;\n  var name = 'hljs';\n  var pos;\n\n  if (aliases) {\n    lowlight.registerAlias(aliases);\n  }\n\n  if (languages) {\n    // eslint-disable-next-line guard-for-in\n    for (let name in languages) {\n      lowlight.registerLanguage(name, languages[name]);\n    }\n  }\n\n  if (prefix) {\n    pos = prefix.indexOf('-');\n    name = pos === -1 ? prefix : prefix.slice(0, pos);\n  }\n\n  return transformer;\n\n  function transformer(tree) {\n    visit(tree, 'element', visitor);\n  }\n\n  function visitor(node, index, parent) {\n    var props = node.properties;\n    var result;\n    var lang;\n\n    if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n      return;\n    }\n\n    lang = language(node);\n\n    if (lang === false || !lang && !detect || plainText.indexOf(lang) !== -1) {\n      return;\n    }\n\n    if (!props.className) {\n      props.className = [];\n    }\n\n    if (props.className.indexOf(name) === -1) {\n      props.className.unshift(name);\n    }\n\n    try {\n      if (lang) {\n        result = lowlight.highlight(lang, toText(parent), options);\n      } else {\n        result = lowlight.highlightAuto(toText(parent), options);\n      }\n    } catch (error) {\n      if (error && ignoreMissing && /Unknown language/.test(error.message)) {\n        return;\n      }\n\n      throw error;\n    }\n\n    if (!lang && result.language) {\n      props.className.push('language-' + result.language);\n    }\n\n    node.children = result.value;\n  }\n} // Get the programming language of `node`.\n\n\nfunction language(node) {\n  var className = node.properties.className || [];\n  var length = className.length;\n  var index = -1;\n  var value;\n\n  while (++index < length) {\n    value = className[index];\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false;\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5);\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9);\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/Saul/Desktop/shack2/node_modules/rehype-highlight/index.js"],"names":["visit","require","lowlight","toText","module","exports","attacher","options","settings","detect","subset","prefix","ignoreMissing","plainText","aliases","languages","name","pos","registerAlias","registerLanguage","indexOf","slice","transformer","tree","visitor","node","index","parent","props","properties","result","lang","tagName","language","className","unshift","highlight","highlightAuto","error","test","message","push","children","value","length"],"mappings":"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","sourcesContent":["'use strict'\n\nvar visit = require('unist-util-visit')\nvar lowlight = require('lowlight')\nvar toText = require('hast-util-to-text')\n\nmodule.exports = attacher\n\nfunction attacher(options) {\n  var settings = options || {}\n  var detect = settings.subset !== false\n  var prefix = settings.prefix\n  var ignoreMissing = settings.ignoreMissing\n  var plainText = settings.plainText || []\n  var aliases = settings.aliases\n  var languages = settings.languages\n  var name = 'hljs'\n  var pos\n\n  if (aliases) {\n    lowlight.registerAlias(aliases)\n  }\n\n  if (languages) {\n    // eslint-disable-next-line guard-for-in\n    for (let name in languages) {\n      lowlight.registerLanguage(name, languages[name])\n    }\n  }\n\n  if (prefix) {\n    pos = prefix.indexOf('-')\n    name = pos === -1 ? prefix : prefix.slice(0, pos)\n  }\n\n  return transformer\n\n  function transformer(tree) {\n    visit(tree, 'element', visitor)\n  }\n\n  function visitor(node, index, parent) {\n    var props = node.properties\n    var result\n    var lang\n\n    if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n      return\n    }\n\n    lang = language(node)\n\n    if (\n      lang === false ||\n      (!lang && !detect) ||\n      plainText.indexOf(lang) !== -1\n    ) {\n      return\n    }\n\n    if (!props.className) {\n      props.className = []\n    }\n\n    if (props.className.indexOf(name) === -1) {\n      props.className.unshift(name)\n    }\n\n    try {\n      if (lang) {\n        result = lowlight.highlight(lang, toText(parent), options)\n      } else {\n        result = lowlight.highlightAuto(toText(parent), options)\n      }\n    } catch (error) {\n      if (error && ignoreMissing && /Unknown language/.test(error.message)) {\n        return\n      }\n\n      throw error\n    }\n\n    if (!lang && result.language) {\n      props.className.push('language-' + result.language)\n    }\n\n    node.children = result.value\n  }\n}\n\n// Get the programming language of `node`.\nfunction language(node) {\n  var className = node.properties.className || []\n  var length = className.length\n  var index = -1\n  var value\n\n  while (++index < length) {\n    value = className[index]\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5)\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9)\n    }\n  }\n\n  return null\n}\n"]},"metadata":{},"sourceType":"script"}