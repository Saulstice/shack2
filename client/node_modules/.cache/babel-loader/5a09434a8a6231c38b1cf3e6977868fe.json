{"ast":null,"code":"'use strict';\n\nmodule.exports = visitParents;\n\nvar convert = require('unist-util-is/convert');\n\nvar color = require('./color');\n\nvar CONTINUE = true;\nvar SKIP = 'skip';\nvar EXIT = false;\nvisitParents.CONTINUE = CONTINUE;\nvisitParents.SKIP = SKIP;\nvisitParents.EXIT = EXIT;\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is;\n\n  if (func(test) && !func(visitor)) {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n\n  is = convert(test);\n  one(tree, null, [])();\n\n  function one(child, index, parents) {\n    var value = object(child) ? child : {};\n    var name;\n\n    if (string(value.type)) {\n      name = string(value.tagName) ? value.tagName : string(value.name) ? value.name : undefined;\n      node.displayName = 'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')';\n    }\n\n    return node;\n\n    function node() {\n      var result = [];\n      var subresult;\n\n      if (!test || is(child, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(child, parents));\n\n        if (result[0] === EXIT) {\n          return result;\n        }\n      }\n\n      if (!child.children || result[0] === SKIP) {\n        return result;\n      }\n\n      subresult = toResult(children(child.children, parents.concat(child)));\n      return subresult[0] === EXIT ? subresult : result;\n    }\n  } // Visit children in `parent`.\n\n\n  function children(children, parents) {\n    var min = -1;\n    var step = reverse ? -1 : 1;\n    var index = (reverse ? children.length : min) + step;\n    var child;\n    var result;\n\n    while (index > min && index < children.length) {\n      child = children[index];\n      result = one(child, index, parents)();\n\n      if (result[0] === EXIT) {\n        return result;\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step;\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (object(value) && 'length' in value) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value];\n  }\n\n  return [value];\n}\n\nfunction func(d) {\n  return typeof d === 'function';\n}\n\nfunction string(d) {\n  return typeof d === 'string';\n}\n\nfunction object(d) {\n  return typeof d === 'object' && d !== null;\n}","map":{"version":3,"sources":["/Users/Saul/Desktop/shack2/node_modules/unist-util-visit-parents/index.js"],"names":["module","exports","visitParents","convert","require","color","CONTINUE","SKIP","EXIT","tree","test","visitor","reverse","is","func","one","child","index","parents","value","object","name","string","type","tagName","undefined","node","displayName","result","subresult","length","toResult","children","concat","min","step","d"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (func(test) && !func(visitor)) {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])()\n\n  function one(child, index, parents) {\n    var value = object(child) ? child : {}\n    var name\n\n    if (string(value.type)) {\n      name = string(value.tagName)\n        ? value.tagName\n        : string(value.name)\n        ? value.name\n        : undefined\n\n      node.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return node\n\n    function node() {\n      var result = []\n      var subresult\n\n      if (!test || is(child, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(child, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (!child.children || result[0] === SKIP) {\n        return result\n      }\n\n      subresult = toResult(children(child.children, parents.concat(child)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n  }\n\n  // Visit children in `parent`.\n  function children(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var child\n    var result\n\n    while (index > min && index < children.length) {\n      child = children[index]\n      result = one(child, index, parents)()\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (object(value) && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\nfunction func(d) {\n  return typeof d === 'function'\n}\n\nfunction string(d) {\n  return typeof d === 'string'\n}\n\nfunction object(d) {\n  return typeof d === 'object' && d !== null\n}\n"]},"metadata":{},"sourceType":"script"}